class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left = None
        self.right = None

class Solution:
	def sortedArrayToBST(self, nums):
	    
	    def preorder(root):
	        return [root.val] + preorder(root.left) + preorder(root.right) if root else []
	    
	    def dfs(arr, l, r):
	        if l > r:
	            return None
	            
	        mid = l+(r-l)//2
	        root = TreeNode(arr[mid])
	        
	        root.left = dfs(arr, l, mid-1)
	        root.right = dfs(arr, mid+1, r)
	        return root
	        
	        
	    return preorder(dfs(nums, 0, len(nums)-1))
